version: "3.9"

services:
  php-apache:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: coffreo-php
    ports:
      - "8080:80"
    environment:
      CORS_ALLOW_ORIGIN: http://localhost:3010
    volumes:
      - ../../:/var/www
    working_dir: /var/www/app
    depends_on:
      - mysql
      - rabbitmq
    networks:
      - app_network_coffreo
    #environment:
      # The DocumentRoot is configured directly in the Dockerfile
      # by editing /etc/apache2/sites-available/000-default.conf,
      # so there's no need to set it via environment variables here.
      # APACHE_DOCUMENT_ROOT: /var/www/app/public

  mysql:
    image: mysql:8.0
    container_name: coffreo-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: coffreo
      MYSQL_USER: coffreo
      MYSQL_PASSWORD: coffreo
    command: --default-authentication-plugin=mysql_native_password --bind-address=0.0.0.0
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - app_network_coffreo

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: coffreo-phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: coffreo-mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    networks:
      - app_network_coffreo

  rabbitmq:
    image: rabbitmq:3-management
    container_name: coffreo-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app_network_coffreo

  worker_messenger:
    build:
      context: ../../
      dockerfile: Dockerfile
    container_name: coffreo-worker
    depends_on:
      - rabbitmq
      - mysql
    volumes:
      - ../../:/var/www
    command: >
      php -d memory_limit=512M /var/www/app/bin/console
      messenger:consume async --bus=command.bus --time-limit=3600 -vv
    restart: unless-stopped
    networks:
      - app_network_coffreo

  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      SERVER_NAME: ':80'
      JWT_KEY: '!ThisIsALongerSecretWithAtLeast32Chars!'
      MERCURE_PUBLISHER_JWT_KEY: '!ThisIsALongerSecretWithAtLeast32Chars!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ThisIsALongerSecretWithAtLeast32Chars!'
      ALLOW_ANONYMOUS: '1'
      CORS_ALLOWED_ORIGINS: 'http://localhost:3010 null'
      PUBLISH_ALLOWED_ORIGINS: 'http://localhost:8080'
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://localhost:3010 null
        anonymous
        publish_anonymous
    ports:
      - "3002:80"
    networks:
      - app_network_coffreo

  frontend:
    build:
      context: ../../frontend
      dockerfile: Dockerfile
    ports:
      - "3010:3000"
    volumes:
      - ../../frontend:/app
    working_dir: /app
    command: sh -c "npm install && npm run dev"
    networks:
      - app_network_coffreo



networks:
  app_network_coffreo:
    driver: bridge

volumes:
  db_data:
  rabbitmq_data:
